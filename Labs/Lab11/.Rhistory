c5[i] <- (1+ (2 * c5[i-1]))
print(c5)
}
print(c5)
plot7 <- plot(time , abundance)
show(plot7)
plot7
plot7 <- plot(time , abundance)
plot7
5 > 4
5 > 4
5 > 4
5 >= 4
5 > 4
5 < 4
5 <= 4
5 != 4
5 == 4
>= greater than or equal to
> greater than
< less than
<= less than or equal to
!= not equal to
== are equal
>= greater than or equal to
> greater than
< less than
<= less than or equal to
!= not equal to
== are equal
5 >= 4
#TRUE
5 > 4
#TRUE
5 < 4
#FALSE
5 <= 4
#FALSE
5 != 4
#TRUE
5 == 4
#FALSE
echo"I would like $x cookies"
base <- 10
height <- 9
triangleArea <- 0.5 * base * height
show(triangleArea)
return(myarea)
triangleArea <- function(base, height) {
myarea <- 0.5 * base * height
return(myarea)
}
triangleArea(10, 9)
triangleArea(5, 5)
abs(5)
abs(-2.3)
vector <- c(1.1, 2, 0, -4.3, 9, -12)
abs(vector)
ex1 <- abs(5)
ex2 <- abs(-2.3)
ex3 <- vector <- c(1.1, 2, 0, -4.3, 9, -12)
ex3 <- c(1.1, 2, 0, -4.3, 9, -12)
abs(ex3)
show(abs(ex3))
show(ex2)
show(ex1)
a <- 4
myabsfx <- function(a) {
if(a >= 0) {
print(a)
}
else {
a * (-1)
print(a)
}
}
myAbs <- function(a) {
if(a >= 0) {
print(a)
}
else {
a * (-1)
print(a)
}
}
a <- 4
myAbs(4)
myAbs(-4)
abs(ex1)
abs(ex2)
?function
q
myAbs <- function(a) {
if(a <= 0) {
print(a)
}
else if (x >= 0) {
a <- a * (-1)
}
return(a)
}
myAbs(ex1)
ex1 <- 5
ex2 <- -2.3
ex3 <- c(1.1, 2, 0, -4.3, 9, -12)
myAbs(ex1)
myAbs <- function(a) {
if(a <= 0) {
print(a)
}
else if (x >= 0) {
a <- a * (-1)
}
}
myAbs(ex1)
myAbs <- function(a) {
if(a <= 0) {
print(a)
}
else if (a >= 0) {
a <- a * (-1)
}
return(a)
}
myAbs(ex1)
myAbs(ex2)
myAbs <- function(a) {
if(a > 0) {
print(a)
}
else if (a < 0) {
a <- a * (-1)
}
return(a)
}
myAbs(ex1)
myAbs(ex2)
myAbs(ex3)
myAbs <- function(a) {
if(a < 0) {
a <- a * (-1)
}
return(a)
}
myAbs(ex1)
myAbs(ex2)
myAbs(ex3)
?ifelse
myAbs <- function (a) {
ifelse(a>0, print(a), a * (-1))
}
myAbs(ex1)
myAbs(ex2)
myAbs(ex3)
myAbs <- function (a) {
ifelse(a>0, a, (a * (-1)))
}
myAbs(ex1)
myAbs(ex2)
myAbs(ex3)
ex3
myAbs <- function(a) {
if(a > 0) {
a
}
else if (a < 0) {
a * (-1)
}
return(a)
}
myAbs(ex1)
myAbs(ex2)
myAbs <- function(a) {
if(a > 0) {
a
}
else if (a < 0) {
(a * (-1))
}
return(a)
}
myAbs(ex1)
myAbs(ex2)
myAbs(ex3)
myAbs <- function (a) {
ifelse(a>0, a, (a * (-1)))
}
myAbs(ex1)
myAbs(ex2)
myAbs(ex3)
myAbs2 <- function (a) {
ifelse(a>0, a, (a * (-1)))
}
myAbs2(ex1)
myAbs2(ex2)
myAbs2(ex3)
myAbs2 <- function (a) {
ifelse(a>=0, a, (a * (-1)))
}
myAbs2(ex1)
myAbs2(ex2)
myAbs2(ex3)
?return
myAbs1 <- function(a) {
if(a > 0) {
return(a)
}
else if (a < 0) {
return(a * (-1))
}
}
myAbs1(ex1)
myAbs1(ex2)
myAbs1(ex3)
myAbs1 <- function(a) {
if(a > 0) {
for (i in seq(a)) {
a
}
}
else if (a < 0) {
for (i in seq(a)) {
a <- a * (-1)
}
}
return(a)
}
myAbs1(ex1)
myAbs1(ex2)
myAbs1(ex3)
myAbs1 <- function(a) {
for (i in 1:length(a)){
if (a[i] < 0) {
a[i] <- a[i] * (-1)
}
}
return(a)
}
a <- c(1.1, 2, 0, -4.3, 9, -12)
myAbs1(a)
myAbs1 <- function(a) {
for (i in 1:length(a)){
if (a[i] < 0) {
a[i] <- a[i] * (-1)
}
}
return(a)
}
myAbs1(ex1)
myAbs1(ex2)
myAbs1(ex3)
myAbs1(ex1)
myAbs2(ex2)
myAbs3(ex3)
myAbs2(ex1)
myAbs2(ex2)
myAbs2(ex3)
show(myAbs2(ex3))
fib <- rep_len(1, 20)
fib
fib[1] <- 0
fib[2] <- 1
fib
for(i in 3:20) {
fib[i] <- fib[i-1] + fib[i-2]
print(fib[i])
}
fib[1] <- 0
fib[2] <- 1
fib
fib[1] <- 1
fib
fib
for(i in 3:20) {
fib[i] <- fib[i-1] + fib[i-2]
print(fib[i])
}
fib <- rep_len(1, 20)
fib[1] <- 1
fib[2] <- 1
fib
fib <- rep_len(1, 20)
fib
fibOLD[1] <- 1
fibOLD
fibMOD[1] <- 0
fibMOD
for(i in 3:20) {
fibOLD[i] <- fibOLD[i-1] + fibOLD[i-2]
print(fibOLD[i])
}
fibOLD[1] <- 1
fibOLD
fib <- rep_len(1, 20)
fib
fib[1] <- 1
fib
fib[1] <- 0
fib
for(i in 3:20) {
fib[i] <- fib[i-1] + fib[i-2]
print(fib[i])
}
fibSeq <- function(n, s) {
fib <- rep_len(0, s)
fib[2] <- 1
fib[1] <- n
for(i in 3:s) {
fib[i] <- fib[i-1] + fib[i-2]
}
return(fib)
}
fibSeq(0, 20)
fib(1, 20)
fibSeq(1, 20)
fibNEW <- rep_len(1, 20)
fibNEW[1] <- 0
fibNEW
for(i in 3:20) {
fibNEW[i] <- fibNEW[i-1] + fibNEW[i-2]
print(fibNEW[i])
}
fibOLD <- rep_len(1, 20)
for(i in 3:20) {
fibOLD[i] <- fibOLD[i-1] + fibOLD[i-2]
print(fibOLD[i])
}
fibfx <- function(n, s) {
fib <- rep_len(0, s)
fib[2] <- 1
fib[1] <- n
for(i in 3:s) {
fib[i] <- fib[i-1] + fib[i-2]
}
return(fib)
}
fibfx(0, 20)
fibfx(1, 20)
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
?date
Sys.Date()
date
setwd("~/Desktop/CompBio/CompBioLabsAndHomework/Labs/Lab11")
setwd("/Users/deannagallegospayne/CompBio/CompBioLabsAndHomework/Labs/Lab11")
WoodDensityData <- read.csv("GlobalWoodDensityDatabase.csv")
?read.csv
WoodDensityData <- read.csv("GlobalWoodDensityDatabase.csv", stringsAsFactors = F)
colnames(WoodDensityData)
colnames(WoodDensityData)[4] <- "Wood.density"
colnames(WoodDensityData)
View(WoodDensityData)
WoodDensityData$Wood.density
?omit
?NA
is.na(WoodDensity)
WoodDensity <- WoodDensityData$Wood.density
is.na(WoodDensity)
valuesNA <- WoodDensity$NA
WoodDensityData[is.na(WoodDensityData$Wood.density)]
WoodDensityData[is.na(WoodDensityData$Wood.density),]
WoodDensityData[is.na(WoodDensityData$)]
WoodDensityData[is.na(WoodDensityData$), ]
WoodDensityData[is.na(WoodDensityData$Wood.density), ]
WoodDensityData[is.na(WoodDensityData$Wood.density), ]
?na.omi
?na.omit
locationNA <- NAWoodDensityData[is.na(WoodDensityData$Wood.density), ]
locationNA <- WoodDensityData[is.na(WoodDensityData$Wood.density), ]
noNAWoodDensity <- na.omit(locationNA)
View(noNAWoodDensity)
View(noNAWoodDensity)
WoodDensityData <- na.omit(WoodDensityData)
View(WoodDensityData)
colnames(WoodDensityData)
WoodDensityData[is.na(WoodDensityData$Wood.density), ]
WoodDensityData[is.na(WoodDensityData$Wood.density), ]
setwd("/Users/deannagallegospayne/CompBio/CompBioLabsAndHomework/Labs/Lab11")
WoodDensityData <- read.csv("GlobalWoodDensityDatabase.csv", stringsAsFactors = F)
colnames(WoodDensityData)[4] <- "Wood.density"
WoodDensityData[is.na(WoodDensityData$Wood.density), ]
which(is.na(WoodDensityData$Wood.density))
WoodDensityData.noNA <- na.omit(WoodDensityData)
View(WoodDensityData.noNA)
?summarise
library(tidyverse)
?summarise
View(WoodDensityData.noNA)
WoodDensityData.noNA(
group_by(WoodDensityData.noNA$Family),
summarise(WoodDensityData.noNA$Wood.density)
)
setwd("/Users/deannagallegospayne/CompBio/CompBioLabsAndHomework/Labs/Lab11")
WoodData <- read.csv("GlobalWoodDensityDatabase.csv", stringsAsFactors = F)
colnames(WoodData)[4] <- "Wood.density"
WoodData[is.na(WoodData$Wood.density), ]
which(is.na(WoodData$Wood.density))
WoodData.noNA <- na.omit(WoodData)
WoodData.5 <- group_by(WoodData.noNA$Family)
View(WoodData.noNA)
x <- group_by(WoodData.noNA)
View(x)
?unique
?group_by
groupby_family <- group_by(WoodData.noNA$Family)
unique.data.frame(WoodData.noNA)
unique(WoodData.noNA$Family)
group_by(WoodData.noNA$Family)
?summarise
group_by(WoodData.noNA$Family)
?ddply
group_by(WoodData.noNA$Binomial)
?aggregate
str(WoodData.noNA)
opt1 <- aggregate(WoodData.noNA, list(WoodData.noNA$Family, WoodData.noNA$Binomial), mean)
View(opt1)
opt1 <- aggregate(WoodData.noNA, list(WoodData.noNA$Family, WoodData.noNA$Binomial), mean = WoodData.noNA$Wood.density)
opt1 <- aggregate(WoodData.noNA, list(WoodData.noNA$Family, WoodData.noNA$Binomial), FUN = "mean")
View(opt1)
opt1 <- aggregate(WoodData.noNA, list(Family, Binomial, Wood.density), FUN = "mean")
colnames(WoodData.noNA)
WoodData.noNA %>%
group_by(Family, Binomial) %>%
summarize(value = mean(Wood.density))
WoodData.noNA |
group_by(Family, Binomial) |
summarize(value = mean(Wood.density))
View(opt1)
WoodData.noNA %>%
group_by(WoodData.noNa$Family, WoodData.noNa$Binomial) %>%
summarize(value = mean(Wood.density))
unique(WoodData.noNA$Binomial)
WoodData.5 <- WoodData.noNA %>%
group_by(Family, Binomial) %>%
summarize(value = mean(Wood.density))
View(WoodData.5)
for( i in 1:length(WoodData.noNA)) {
if (unique(WoodData.noNA$Binomial[i]) {
mean(WoodData.noNA$Wood.density)
}
}
for( i in 1:length(Vector1.2a)) {
if ( Vector1.2a[i] < 0) {
Vector1.2a[i] <- NA
}
}
for( i in 1:length(WoodData.noNA)) {
if (unique(WoodData.noNA$Binomial[i]) {
mean(WoodData.noNA$Wood.density)
}
}
for( i in 1:length(Vector1.2a)) {
if ( Vector1.2a[i] < 0) {
Vector1.2a[i] <- NA
}
}
for( i in 1:length(WoodData.noNA)) {
if (unique(WoodData.noNA$Binomial[i]) {
mean(WoodData.noNA$Wood.density)
}
}
for( i in 1:length(WoodData.noNA)) {
if (unique(WoodData.noNA$Binomial[i]) {
mean(WoodData.noNA$Wood.density)
}
}
for( i in 1:length(WoodData.noNA)) {
if (unique(WoodData.noNA$Binomial[i])) {
mean(WoodData.noNA$Wood.density)
}
}
for( i in 1:length(WoodData.noNA)) {
unique(WoodData.noNA$Binomial[i])
mean(WoodData.noNA$Wood.density)
}
WoodData.5.2 <- for( i in 1:length(WoodData.noNA)) {
unique(WoodData.noNA$Binomial[i])
mean(WoodData.noNA$Wood.density)
}
WoodData.5.1 <- WoodData.noNA %>%
group_by(Family, Binomial) %>%
summarize(value = mean(Wood.density))
WoodData.5.2 <- for( i in 1:length(WoodData.noNA)) {
unique(WoodData.noNA$Binomial[i])
mean(WoodData.noNA$Wood.density)
}
View(WoodData.5.2)
WoodData.5.2 <- for( i in 1:length(WoodData.noNA)) {
unique(WoodData.noNA$Family[i])
unique(WoodData.noNA$Binomial[i])
mean(WoodData.noNA$Wood.density)
}
View(WoodData.5.2)
WoodData.5.2 <- for( i in 1:length(WoodData.noNA)) {
if (WoodData.noNA[i] = unique(WoodData.noNA$Binomial[i])) {
WoodData.noNA$Wood.density <- mean(WoodData.noNA$Wood.density)
}
}
WoodData.5.2 <- for( i in 1:length(WoodData.noNA)) {
if (unique(WoodData.noNA$Binomial[i])) {
WoodData.noNA$Wood.density <- mean(WoodData.noNA$Wood.density)
}
}
WoodData.5.2 <- for( i in 1:length(WoodData.noNA)) {
unique(WoodData.noNA$Binomial[i])
WoodData.noNA$Wood.density <- mean(WoodData.noNA$Wood.density)
}
WoodData.5.2
WoodData.5.1b <- subset(WoodData.noNA$Binomial)
WoodData.5.1b <- subset(WoodData.noNA$Binomial)
WoodData.5.1b <- subset.data.frame(WoodData.noNA$Binomial)
WoodData.5.1b <- WoodData.noNA$Binomial
WoodData.5.1b <- WoodData.noNA$Binomial & WoodData.noNA$Wood.density
